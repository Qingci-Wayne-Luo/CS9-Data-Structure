#testFile.py
from lab04 import solveMaze
from Stack import Stack

#class example
def test_maze1():
    maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze, 4, 4) == True
    assert maze == [
['+', '+', '+', '+', 'G', '+'],
['+', 8, '+', 11, 12, '+'],
['+', 7, 9, 10, '+', '+'],
['+', 6, '+', '+', 2, '+'],
['+', 5, 4, 3, 1, '+'],
['+', '+', '+', '+', '+', '+'] ]

#no solustion for this one
def test_maze2():
    maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ','+',' ',' ','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze,4,4) == False

#test what if G is not on the border
def test_maze3():
    maze = [
['+','+','+','+','+','+'],
['+',' ','+',' ','G ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ','+'],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze,4,4) == False

#test the priority(the very second step should go North instead of going East)
def test_maze4():
    maze = [
['+','+','+','+','G','+'],
['+',' ','+',' ',' ','+'],
['+',' ',' ',' ','+','+'],
['+',' ','+','+',' ','+'],
['+',' ',' ',' ',' ',' '],
['+','+','+','+','+','+'] ]
    assert solveMaze(maze,4,4) == True
    assert maze == [
['+', '+', '+', '+', 'G', '+'],
['+', 8, '+', 11, 12, '+'],
['+', 7, 9, 10, '+', '+'],
['+', 6, '+', '+', 2, '+'],
['+', 5, 4, 3, 1, ' '],
['+', '+', '+', '+', '+', '+'] ]
    





        
